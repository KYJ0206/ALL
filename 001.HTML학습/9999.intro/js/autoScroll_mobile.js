// 자동 스크롤 기능 - autoScroll_mobile.js

///// 전역변수구역 ///////////////////
// 현재 페이지 번호
let pno = 0;
// 전체 페이지 개수(상수로 변경불가!)
const totnum = 7;
// 광스크롤막기(0-허용,1-불허용)
let psts = 0;
/////////////////////////////////////

$(function () { /// jQB ////////////////////////

    /* 이벤트 중복발생 막기! */
    // 대상: #top, .indic
    // 막을 이벤트: touchstart, touchend
    // 원리: 이벤트 버블링 막기!(자식이벤트가 부모로 올라가는 현상!)
    // 사용메서드: e.stopPropagation()
    $("#top,.indic").on("touchstart touchend",function(e){
        e.stopPropagation();
    }); /////////// 터치이벤트 버블링 막기 ///////////


        //// 터치방향을 위한 변수 ///
        let tcd1, tcd2;
        // tcd1 - 처음 터치된 Y축 위치값
        // tcd2 - 나중 터치끝날때 Y축 위치값



        //// 1. 터치 시작시 화면 터치위치값 변수에 넣기 ///
        // 대상: document
        // 사용위치속성: screenY (페이지 이동이 Y축 이므로!)
        $(document).on("touchstart",function(e){ // e-이벤트전달변수

            // 모바일 터치 위치값 변수에 할당하기
            tcd1 = e.originalEvent.touches[0].screenY;
            console.log("터치시작:"+tcd1);

        });/////////// touchstart 이벤트함수 /////////////



        //// 2. 터치 끝날때 화면 터치위치값 변수에 넣기 ///
        // 대상: document
        // 사용위치속성: screenY (페이지 이동이 Y축 이므로!)
        $(document).on("touchend",function(e){ // e-이벤트전달변수

            ////// 광스크롤막기 /////////////
            if(psts) return;//돌아가!
            psts = 1;//불허용상태변경!
            setTimeout(()=>{psts=0;},1200);
            // 1.2초애니시간후 허용상태변경 //

            // 1. 모바일 터치 위치값 변수에 할당하기
            tcd2 = e.originalEvent.changedTouches[0].screenY;
            console.log("터치끝:"+tcd2);

            // 2. 방향판별하기(델타변수)
            let delta = tcd1 - tcd2;
            console.log("차이:"+delta);


            //////////////////////////////////////////////
            // 3. 스와이프 방향에 따라 페이지번호 증감하기!//
            //////////////////////////////////////////////

            if (delta > 0) { // 양수면 윗방향 스와이프(다음페이지)
                pno++;
                if (pno === totnum) pno = totnum - 1;
                // 마지막페이지에 고정하기!
            } ////// if ///////////
            else { // 음수면 아랫방향 스와이프(이전페이지)
                pno--;
                if (pno === -1) pno = 0;
                // 첫페이지에 고정하기!
            } /////// else ////////

            console.log("페이지번호:" + pno);



            //////////////////////////////////////////////
            // 3. 이동할 페이지(.page)의 위치값 알아내기 ///
            //////////////////////////////////////////////

            // 방법: .page의 순서로 위치를 알아냄!
            let pos = $(".page").eq(pno).offset().top;
            // offset().top 은 현재 선택요소의 top위치값

            console.log("이동위치:" + pos);



            //////////////////////////////////////////////
            // 4. 실제 이동위치로 스크롤 애니메이션 하기 ////
            //////////////////////////////////////////////

            $("html,body").stop().animate({
                scrollTop: pos + "px"
            }, 1200, "easeOutQuint");



            ///////////////////////////////////////////////
            // 5. 페이지번호(pno)에 맞는 GNB 메뉴 변경하기 //
            ///////////////////////////////////////////////
            // 변경대상: .gnb li, .indic li
            $(".gnb li").eq(pno).addClass("on")
            .siblings().removeClass("on");
            $(".indic li").eq(pno).addClass("on")
            .siblings().removeClass("on");
            // 선택된 li 이외의 li형제들 class="on"제거하기



        });/////////// touchend 이벤트함수 /////////////




    /////////////// 자동스크롤 구현 ////////////////////
    // 사용메서드: on(이벤트명, 함수) 
    // -> 이벤트를 띄어쓰기로 여러개 쓰면 여러이벤트가 적용됨!
    $(document).on("mousewheel DOMMouseScroll",
        function (e) { //e-이벤트 전달변수



            ////// 광스크롤막기 /////////////
            if(psts) return;//돌아가!
            psts = 1;//불허용상태변경!
            setTimeout(()=>{psts=0;},1200);
            // 1.2초애니시간후 허용상태변경 //



            //////////////////////////////
            // 1. 마우스휠 방향 알아내기!///
            //////////////////////////////

            // e변수로 들어오는 이벤트전달값으로 알아낸다!
            e = window.event || e;

           
            let delta = e.detail ? e.detail : e.wheelDelta;
            // delta변수에 유효한 설정이 적용되어 할당된다!
            

            console.log("휠델타정보:"+delta);
            // 방향 테스트 결과: 
            // 마이너스 -> 아랫쪽스크롤
            // 플러스 -> 윗쪽스크롤
            // 예외) 파이어폭스는 반대방향임!!!


            //// 파이어폭스 브라이우저 이면 델타값 부호를 반대로 한다!!!
            if(/Firefox/i.test(navigator.userAgent)){
                delta = -delta; // 변수앞에 마이너스는 부호반대!
            } ///////// 파이어폭스여부 if문 /////////////



            //////////////////////////////////////////////
            // 2. 마우스휠 방향에 따라 페이지번호 증감하기!//
            //////////////////////////////////////////////

            if (delta < 0) { // -120 아랫방향 스크롤(다음페이지)
                pno++;
                if (pno === totnum) pno = totnum - 1;
                // 마지막페이지에 고정하기!
            } ////// if ///////////
            else { // 120 윗방향 스크롤(이전페이지)
                pno--;
                if (pno === -1) pno = 0;
                // 첫페이지에 고정하기!
            } /////// else ////////

            console.log("페이지번호:" + pno);



            //////////////////////////////////////////////
            // 3. 이동할 페이지(.page)의 위치값 알아내기 ///
            //////////////////////////////////////////////

            // 방법: .page의 순서로 위치를 알아냄!
            let pos = $(".page").eq(pno).offset().top;
            // offset().top 은 현재 선택요소의 top위치값

            console.log("이동위치:" + pos);



            //////////////////////////////////////////////
            // 4. 실제 이동위치로 스크롤 애니메이션 하기 ////
            //////////////////////////////////////////////

            $("html,body").stop().animate({
                scrollTop: pos + "px"
            }, 1200, "easeOutQuint");



            ///////////////////////////////////////////////
            // 5. 페이지번호(pno)에 맞는 GNB 메뉴 변경하기 //
            ///////////////////////////////////////////////
            // 변경대상: .gnb li, .indic li
            $(".gnb li").eq(pno).addClass("on")
            .siblings().removeClass("on");
            $(".indic li").eq(pno).addClass("on")
            .siblings().removeClass("on");
            // 선택된 li 이외의 li형제들 class="on"제거하기


        }); //////////// 자동스크롤 /////////////////////////
    ///////////////////////////////////////////////////


}); //////////////// jQB /////////////////////